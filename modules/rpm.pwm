#! /bin/bash

case $1 in
    desc )
	echo "RPM support for PWIZ"
	return
	;;
    longdesc )
	echo "This module is adds support for RPM and overwrites some default definitions."
	return
	;;
    init )
	pwiz_module_needs package version unpack
	pwiz_module_uses installwatch unpack
	pwiz_phase_new rpmsetup after package
	pwiz_phase_add_callme rpmsetup
	pwiz_phase_new rpmheader after rpmsetup
	pwiz_phase_add_rem prep     ""
	pwiz_phase_add_rem prep     "%prep"
	pwiz_phase_add     prep     'rpm_section=prep ; rm -f $PWIZ_TMPDIR/rpm_{vars,pwd}'
	pwiz_phase_add_rem build    "%build"
	pwiz_phase_add     build    'rpm_section=build ; rm -f $PWIZ_TMPDIR/rpm_{vars,pwd}'
	pwiz_phase_add_rem install  ""
	pwiz_phase_add_rem install  "%install"
	pwiz_phase_add     install  'rpm_section=install ; rm -f $PWIZ_TMPDIR/rpm_{vars,pwd}'
	pwiz_phase_add_rem finish   ""
	pwiz_phase_add_rem finish   "%files"
	pwiz_phase_add_callme finish finish
# FIXME: remove this
#	pwiz_run_wrapper_register rpm_spec_run_wrapper
	rpm_section=preamble
	;;
    rpmsetup )
	pwiz_phase_add_rem rpmheader "Name:         $pwiz_project_project"
	pwiz_phase_add_rem rpmheader "Version:      $pwiz_project_version"
	pwiz_phase_add_rem rpmheader "Group:        FIXME"
	pwiz_phase_add_rem rpmheader "License:      FIXME"
	pwiz_phase_add_rem rpmheader "Release:      0"
	pwiz_phase_add_rem rpmheader "Source:       $package_uri"
	pwiz_phase_add_rem rpmheader "BuildRoot:    %{_tmppath}/%{name}-%{version}-build"
	pwiz_phase_add_rem rpmheader "Summary:      FIXME"
	pwiz_phase_add_rem rpmheader ""
	pwiz_phase_add_rem rpmheader "%description"
	pwiz_phase_add_rem rpmheader "FIXME"
	return
	;;
    finish )
# FIXME: move to globals or other section, do not create final list, but replace dir -> systemdir
	exec 3<$installwatch_file
	while read -u3 rpm_file ; do
	    if test "$rpm_file" = "${rpm_file% dir}" ; then
		pwiz_phase_add_rem finish "${rpm_file% file}"
	    else
# FIXME owned directories exceptions
		pwiz_pkgdb_what_owns "${rpm_file% dir}"
		if test ${#pwiz_result[@]} -le 1 -a "${pwiz_result[0]:-$pwiz_project_project}" = "$pwiz_project_project" ; then
		    pwiz_phase_add_rem finish "%dir ${rpm_file% dir}"
		fi
	    fi
	done
	exec 3<&-
	return
	;;
    version )
	echo "0.1"
	return
	;;
    * )
	return
	;;
esac

# FIXME: zip archives etc.
# FIXME: Ask for directory and not try it.
function unpack_prepare {
#    mkdir $PWIZ_TMPDIR/rpm_unpack
#    cd $PWIZ_TMPDIR/rpm_unpack
#    $unpack_seq "$PWIZ_SRCDIR/$pwiz_project_project/${package_uri##*/}"
#    pwiz_exec unpack search_dirname
#    cd -
#    rm -rf $PWIZ_TMPDIR/rpm_unpack
# FIXME:
    pwiz_phase_add_run unpack '%setup'
# FIXME: probably obsolete
#    pwiz_phase_add     unpack 'rpm_section=prep_after_setup'
}

# FIXME: This wrapper is obsolete (maybe will be used for %post in future).
function rpm_run_wrapper {
# FIXME: Not complete
    expanded="$(rpm -E "%define name $pwiz_project_project
%define version $pwiz_project_version
%define setup $unpack_seq $PWIZ_SRCDIR/${package_uri##*/} ; cd %{name}-%{version}
$*")"
    echo "*** RPM expanded: $expanded"
    eval pwiz_run_wrap "$expanded"
}

# redefinition of run wrapper core
function pwiz_run_core {
# FIXME: to pwiz_run_prepare
# FIXME: Flexible %setup
# FIXME: %post etc.
    case $rpm_section in
	prep )
	    rpm_create_spec -bp prep false "$@"
	    ;;
# FIXME: probably obsolete
#	prep_after_setup )
#	    rpm_create_spec -bp prep false "$@"
#	    ;;
	build )
	    rpm_create_spec "-bc --short-circuit" build true "$@"
	    ;;
	install )
	    rpm_create_spec "-bi --short-circuit" install true "$@"
	    ;;
	* )
	    pwiz_fatal "Unimplemented RPM section"
	    ;;
    esac
    cd $PWIZ_SRCDIR
    rpmbuild $rpm_build_arg $PWIZ_TMPDIR/rpm_tmp.spec
    if test -f $PWIZ_TMPDIR/pwd ; then
	cd "$(<$PWIZ_TMPDIR/pwd)"
    fi
    pwiz_set_rc $pwiz_run_rc
}

#@ rpm_create_spec rpm_build_arg section add_setup "$@"
function rpm_create_spec {
    rpm_build_arg="$1"
    echo >$PWIZ_TMPDIR/rpm_tmp.spec \
"Name:         $pwiz_project_project
Version:      $pwiz_project_version
Group:        FIXME
License:      FIXME
Release:      0
Source:       $package_uri
BuildRoot:    %{_tmppath}/%{name}-%{version}-build
Summary:      FIXME
# FIXME: define __check_files

%description
FIXME

%prep"
    if $3 ; then
	echo >>$PWIZ_TMPDIR/rpm_tmp.spec "%setup"
    fi
    if test $2 != prep ; then
	echo >>$PWIZ_TMPDIR/rpm_tmp.spec -e "\n%$2"
    fi
    shift 3
    echo >>$PWIZ_TMPDIR/rpm_tmp.spec \
$'pwiz_set_options="$(set -o | while read ; do if test "${REPLY##*\t}" = on ; then echo "set -o ${REPLY%%\t*}" ; else echo "set +o ${REPLY%%\t*}" ; fi ; done)"'"
set +o posix
if test -f $PWIZ_TMPDIR/rpm_env ; then
    $PWIZ_TMPDIR/rpm_env 2>/dev/null || true
else
    eval \"\$pwiz_set_options\"
fi
$*
export >$PWIZ_TMPDIR/rpm_env
set >>$PWIZ_TMPDIR/rpm_env
"$'set -o | while read ; do if test "${REPLY##*\t}" = on ; then echo "set -o ${REPLY%%\t*}" ; else echo "set +o ${REPLY%%\t*}" ; fi ; done'" >>$PWIZ_TMPDIR/rpm_env
"$'shopt | while read ; do if test "${REPLY##*\t}" = on ; then echo "shopt -s ${REPLY%%\t*}" ; else echo "shopt -u ${REPLY%%\t*}" ; fi ; done'" >>$PWIZ_TMPDIR/rpm_env
echo \"cd \$PWD\" >>$PWIZ_TMPDIR/rpm_env
echo \"\$PWD\" >$PWIZ_TMPDIR/pwd"
}

function pwiz_projectdirs_init_callback {
    PWIZ_SRCDIR=/usr/src/packages/SOURCES
    PWIZ_UNPACKDIR=/usr/src/packages/BUILD
    PWIZ_BUILDDIR=/usr/src/packages/BUILD
    PWIZ_INSTALLROOT=/var/tmp/$pwiz_project_project-$pwiz_project_version-build
}
