#! /bin/bash

case $1 in
    desc )
	echo "anonymous FTP downloading and listing"
	return
	;;
    longdesc )
	echo "This module provides functions for anonymous FTP listings and downloads."
	return
	;;
    init )
	case $OPTCNT_VERBOSE in
	    0 )
		ftp_WGET="wget -q"
		;;
	    1 )
		ftp_WGET="wget -nv"
		;;
	    2 )
		ftp_WGET="wget -v"
		;;
	esac
	;;
    version )
	echo "0.1"
	return
	;;
    * )
	return
	;;
esac

#@ ftp_list URI callback
# URI: URI to be listed
# callback: callback for found items
#
# Call callback for all found FTP objects.
# Callback argument: URI
# NOTE: If @$2 == "", then $pwiz_callback is used (probably echo).
function ftp_list {
    mkdir -p $PWIZ_CACHEDIR/ftp
    if ! $ftp_WGET -P $PWIZ_CACHEDIR/ftp -N -nr -r -l 1 "$1/" ; then
	echo "*** $1 not found"
	return 1
    fi
    ftp_list_callback "${1#ftp://}/.listing" "${2:-$pwiz_callback}"
}

#@ ftp_list_recursive URI callback
# URI: URI to be listed
# callback: callback for found items
#
# Call callback for all recursivelly found FTP objects.
# Callback argument: URI
# NOTE: If @$2 == "", then $pwiz_callback is used (probably echo).

# FIXME: Check, whether works for atypical characters in URI
function ftp_list_recursive {
    local pwiz_callback_save pwiz_callback_sub
    mkdir -p $PWIZ_CACHEDIR/ftp
    if ! $ftp_WGET -P $PWIZ_CACHEDIR/ftp -N -nr -r -R '*' "$1/" ; then
	echo "*** $1 not found"
	return 1
    fi
    shopt -s dotglob
    pwiz_callback_save=$pwiz_callback
    pwiz_callback_sub=${2:-$pwiz_callback}
    pwiz_callback=ftp_list_callback
    pwiz_find "${1#ftp://}" $PWIZ_CACHEDIR/ftp/ "$pwiz_callback_sub"
    pwiz_callback=$pwiz_callback_save
    shopt -u dotglob
}

# ftp_list_callback (internal function)
# FIXME: symlinks in listings
function ftp_list_callback {
    local flags links user group size mount day yearhour name
# FIXME:???
    if test "${1##*/}" = .listing ; then
	exec 3<"$PWIZ_CACHEDIR/ftp/$1"
	while read -u3 flags links user group size mount day yearhour name ; do
	    eval name=$'"${name%%\r}"'
	    pwiz_canonize "${1%/.listing}/$name"
	    $2 "ftp://$pwiz_result"
	done
	exec 3<&-
    fi
}

#@ ftp_get URI
# URI: URI of file to get
# 
# Download a file using FTP protocol.

# FIXME: storage location and storage engine
function ftp_get {
    local rc
    cd $PWIZ_CACHEDIR
    $ftp_WGET -N "$1"
    rc=$?
    cd -
    return $rc
}
