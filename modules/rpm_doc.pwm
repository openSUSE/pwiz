#! /bin/bash

case $1 in
    desc )
	echo "RPM %doc support for PWIZ"
	return
	;;
    longdesc )
	echo "This module adds basic documentation files RPM and overwrites some default definitions."
	return
	;;
    init )
	pwiz_module_needs rpm gnu_configure
	pwiz_phase_new_call rpm_doc_check after BUILD_POSTCOMPILE
	pwiz_phase_new_call rpm_doc_copy after INSTALL_POSTCHECK
	pwiz_phase_add configure_args rpm_doc_configure
	filelist_install_provider
	filelist_inspect_provider
	;;
    version )
	echo "0.1"
	return
	;;
    * )
	return
	;;
esac

#@ rpm_doc_check
#
# Check unpacked package and guess, what should be packaged to
#documentation. (internal)
shopt -s extglob
function rpm_doc_check {
    local LC_ALL=C
    local doc_active=false
    shopt -s extglob
    for file in * ; do
	if ! test -f "$file" ; then
	    continue
	fi
	case "$file" in
# These files doesn't contain any interesting information.
	    ABOUT-NLS | MANIFEST )
		;;
	    INSTALL )
		md5sum="$(md5sum "$file")"
		md5sum=${md5sum%% *}
		case $md5sum in
# FIXME: Make it configurable
# Default GNU install files. No useful per-package information.
		    0d6be33865b76025c20b48bcac87adb7 | 9f3e20fdff9c78aa8e3f9b42be166769 | d7adbcf07c5c813693ddf958be9c40e3 )
			;;
		    * )
			pwiz_array_add rpm_doc_files "$file"
			doc_active=true
			;;
		esac
		;;
# ChangeLog and uppercase named files are probably basic documentation.
	    ChangeLog | *([-._A-Z]) )
		pwiz_array_add rpm_doc_files "$file"
		doc_active=true
		;;
	esac
    done
    shopt -u extglob
    if $doc_active ; then
	pwiz_array_add rpm_files_list_callback__ rpm_doc_files_list
    fi
}
shopt -u extglob

function rpm_doc_configure {
    # FIXME: don't hardwire SuSE defaults
    local p="/usr/share/doc/packages/$pwiz_project_project-$pwiz_project_version"
    local d="/usr/share/doc/packages"
    pwiz_cache_load q=rpm_doc_wants_docdir default=false
    if $pwiz_guess_best_value ; then
	# FIXME: something can be guessed by configure --help
	if pwiz_ask_string "Enter configure option for changing documentation destination." \
	    "Based on previous PWIZ runs, it seems, that package uses ugly located documentation and you wants to change documentation destination by configure script. This argument has no standard and varies package from package. You can use \"\$p\" instead of \"$p\" and \"\$d\" instead of \"$d\". Predefined defaults are one of most often."\
	    q=rpm_doc_configure_arg \
	    default[0]="--with-docdir=\$p" \
	    default[1]="--with-docdir=\$d" \
	    default[2]="--with-doc-dir=\$p" \
	    default[3]="--with-doc-dir=\$d" ; then
	    eval gnu_configure_add_arg "$pwiz_answer"
	fi
    fi
}

function rpm_doc_copy {
    if $rpm_doc_has_doc_files_addon ; then
	# mkdir check not needed, done by adding actions.
	rpm_subst_names "cp -p ${rpm_doc_files[*]} \$RPM_BUILD_ROOT/usr/share/doc/packages/$pwiz_project_project-$pwiz_project_version"
	pwiz_phase_add_run rpm_doc_copy "$pwiz_result"
    fi
}
rpm_doc_has_doc_files_addon=false

#@ rpm_doc_files_list
#
# Adds %doc for selected files to filelist. (internal)
function rpm_doc_files_list {
    if ! $rpm_doc_has_doc_files_addon ; then
	pwiz_phase_add_rem rpm_files_list "%doc ${rpm_doc_files[*]}"
    fi
}

#@ rpm_doc_filelist_install
#
# Passes all files, but if any file is in datadir/doc or prefix/doc,
#ask user for moving it.

# FIXME: /usr/share/doc/packages is SuSE specific, but %doc not.
# Make a fix to prevent removing of files in %files %doc.
function rpm_doc_filelist_install {
    local has_ugly_doc=false
    local ugly_file ugly_datadir
    filelist_read_open
    while filelist_read_item ; do
	if test "$filelist_tag_name" != /usr/share/doc/packages -a "$filelist_tag_name" != /usr/share/doc ; then
	    if test "${filelist_tag_name#/usr/share/doc/packages/}" != "$filelist_tag_name" ; then
		rpm_doc_has_doc_files_addon=true
	    else
		if test "${filelist_tag_name#$datadir/doc}" != "$filelist_tag_name" ; then
		    ugly_file=$filelist_tag_name
		    ugly_datadir=true
		    has_ugly_doc=true
		else
		    if test "${filelist_tag_name#$prefix/doc}" != "$filelist_tag_name" ; then
			ugly_file=$filelist_tag_name
			ugly_datadir=false
			has_ugly_doc=true
		    fi
		fi
	    fi
	fi
    done
    filelist_read_close
    if $has_ugly_doc ; then
	if $ugly_datadir ; then
	    ugly_dir=${ugly_file#$datadir/doc/}
	    ugly_dir="$datadir/doc/${ugly_dir%%/*}"
	else
	    ugly_dir=${ugly_file#$prefix/doc/}
	    ugly_dir="$prefix/doc/${ugly_dir%%/*}"
	fi
	pwiz_cache_save true q=rpm_doc_wants_docdir
	pwiz_ask_string "Package has ugly located documentation. What to do now?" "In SuSE Linux, documentation is centralized in /usr/share/doc/packages directory. But your package has at least directory \"$ugly_dir\" located in non-standard location. You should move it to standard place, if there is no special reason to keep it at place." \
	    q=rpm_doc_ugly_doc importance=50 \
	    default[0]=keep string[0]="keep it in place" c[0]=1 \
	    default[1]=move string[1]="move it to standard RPM docdir" c[1]=2 \
	    default[2]=movesubdir string[2]="move it to subdirectory of standard RPM docdir" c[2]=2 \
	    default[3]=config string[3]="go back to configure phase and set proper configure option (recommeded if possible, needs pwiz restart" c[3]=3
	case $pwiz_answer in
	    move )
		rpm_doc_has_doc_files_addon=true
		# FIXME: Use path from RPM
		if ! test -d "$PWIZ_INSTALLROOT/usr/share/doc/packages/$pwiz_project_project-$pwiz_project_version" ; then
		    rpm_subst_names "mkdir -p \$RPM_BUILD_ROOT/usr/share/doc/packages/$pwiz_project_project-$pwiz_project_version"
		    pwiz_phase_add_run rpm_doc_copy "$pwiz_result"
		fi
		rpm_subst_names "mv \$RPM_BUILD_ROOT$ugly_dir/* \$RPM_BUILD_ROOT/usr/share/doc/packages/$pwiz_project_project-$pwiz_project_version"
		pwiz_phase_add_run rpm_doc_copy "$pwiz_result"
		rpm_subst_names "rmdir \$RPM_BUILD_ROOT$ugly_dir"
		pwiz_phase_add_run rpm_doc_copy "$pwiz_result"
		;;
	    movesubdir )
		rpm_doc_has_doc_files_addon=true
		pwiz_ask_string "Enter docdir subdirectory." "You have decided to package documentation to subdirectory of defaultdocdir. Now you should enter its name." \
		    q=rpm_doc_move_subdir
		# FIXME: Use path from RPM
		if ! test -d "$PWIZ_INSTALLROOT/usr/share/doc/packages/$pwiz_project_project-$pwiz_project_version/$pwiz_answer" ; then
		    rpm_subst_names "mkdir -p \$RPM_BUILD_ROOT/usr/share/doc/packages/$pwiz_project_project-$pwiz_project_version/$pwiz_answer"
		    pwiz_phase_add_run rpm_doc_copy "$pwiz_result"
		fi
		rpm_subst_names "mv \$RPM_BUILD_ROOT$ugly_dir/* \$RPM_BUILD_ROOT/usr/share/doc/packages/$pwiz_project_project-$pwiz_project_version/$pwiz_answer"
		pwiz_phase_add_run rpm_doc_copy "$pwiz_result"
		rpm_subst_names "rmdir \$RPM_BUILD_ROOT$ugly_dir"
		pwiz_phase_add_run rpm_doc_copy "$pwiz_result"
		;;
	    config )
		pwiz_exit
		;;
	esac
# FIXME: Do not save, that things are OK. It is not perfect solution,
# because used can define --with-docdir=/usr/share/doc and the result
# will be bad entry in cache.
#    else
#	pwiz_cache_save false q=rpm_doc_wants_docdir
    fi
}

function rpm_doc_filelist_inspect {
    filelist_read_open
    pwiz_redirect_stdout $filelist_file_tmp
    while filelist_read_item ; do
	case "$filelist_tag_name" in
# FIXME: hardcoded path
	    /usr/share/doc/packages | /usr/share/doc/packages/* | $mandir | $mandir/* | $infodir | $infodir/* )
		rpm_subst_names "$filelist_tag_name"
		echo "$pwiz_result $filelist_tagline@cat=doc"
		;;
	    * )
		echo "$filelist_tag_name $filelist_tagline"
		;;
	esac
    done
    filelist_read_close
    pwiz_redirect_stdout_close
    mv $filelist_file_tmp $filelist_file
}
