#! /bin/bash

case $1 in
    desc )
	echo "installwatch module"
	return
	;;
    longdesc )
	echo "This module is able to collect file list information collected by installwatch during install process."
	return
	;;
    init )
	pwiz_module_needs filelist
	pwiz_phase_add_callme SETUP
	filelist_raw_provider
	;;
    version )
	echo "0.1"
	return
	;;
    * )
	return
	;;
esac

function installwatch_SETUP {
    pwiz_phase_add SOURCE "mkdir -p $PWIZ_TMPDIR/installwatch"
}

function installwatch_filelist_raw {
    filelist_raw_open
    local installwatch_IFS_save="$IFS"
    IFS=$'\t\n'
    for installwatch_stage in $PWIZ_TMPDIR/installwatch/* ; do
	exec 3<$installwatch_stage
	while read -u3 installwatch_a1 installwatch_a2 installwatch_a3 installwatch_a4 installwatch_a5 ; do
	    case "$installwatch_a2" in
		open )
		    echo "$installwatch_a3" file
		    ;;
# FIXME: special tags for links
		symlink | link )
		    echo "$installwatch_a4" file
		    ;;
		mkdir )
		    echo "$installwatch_a3" dir
		    ;;
	    esac
	done
	exec 3<&-
    done
    IFS="$installwatch_IFS_save"
    # no callback needed, default echo does the right thing
# installwatch works incorrectly for SUID and statically linked binaries (e. g. ldconfig).
# we will combine it with simple find
    shopt -s dotglob
    pwiz_find_d $PWIZ_INSTALLROOT
    shopt -u dotglob
    filelist_raw_close
# FIXME: remove this line
    cp -a $filelist_raw_file $filelist_raw_file.iw
}

function installwatch_run_wrapper {
    local LD_PRELOAD_save
#    installwatch -o $PWIZ_TMPDIR/installwatch/$PWIZ_PHASE_CURRENT$PWIZ_STAGE_CURRENT "$@"
    LD_PRELOAD_save="$LD_PRELOAD"
    export INSTW_LOGFILE=$PWIZ_TMPDIR/installwatch/$PWIZ_PHASE_CURRENT$PWIZ_STAGE_CURRENT
    export LD_PRELOAD="$LD_PRELOAD /usr/lib/installwatch.so"
    pwiz_run_wrap "$@"
    export LD_PRELOAD="$LD_PRELOAD_save"
}
