#! /bin/bash

case $1 in
    desc )
	echo "installwatch module"
	return
	;;
    longdesc )
	echo "This module is able to collect file list information collected by installwatch during install process."
	return
	;;
    init )
	pwiz_module_needs filelist
	pwiz_phase_add_callme SETUP
	filelist_raw_provider
	;;
    version )
	echo "0.1"
	return
	;;
    * )
	return
	;;
esac

#@ installwatch_SETUP
#
# Prepares a directory for collecting lists of accessed files. (internal)
function installwatch_SETUP {
    pwiz_phase_add SOURCE "mkdir -p $PWIZ_TMPDIR/installwatch"
}

#@ installwatch_filelist_raw
#
# Creates raw filelist from collected information. (internal)
function installwatch_filelist_raw {
    # FIXME: Path.
    cat $PWIZ_TMPDIR/installwatch/* | PWIZ_TMPDIR="$PWIZ_TMPDIR" @PW_HELPERDIR@/installwatch_clean
    # no callback needed, default echo does the right thing
# installwatch works incorrectly for SUID and statically linked binaries (e. g. ldconfig).
# we will combine it with simple find
    pwiz_redirect_stdout_append $PWIZ_TMPDIR/installwatch_buildroot.lst
    shopt -s dotglob
    pwiz_find_d $PWIZ_INSTALLROOT
    shopt -u dotglob
    pwiz_redirect_stdout_close
    cat $PWIZ_TMPDIR/installwatch_buildroot.lst >>$filelist_raw_file
# FIXME: remove this line
    cp -a $filelist_raw_file $filelist_raw_file.iw
}

#@ installwatch_run_wrapper
#
# Wrapper for protecting run environment and install file access tracing wrapper. (internal)
function installwatch_run_wrapper {
    local LD_PRELOAD_save
#    installwatch -o $PWIZ_TMPDIR/installwatch/$PWIZ_PHASE_CURRENT$PWIZ_STAGE_CURRENT "$@"
    LD_PRELOAD_save="$LD_PRELOAD"
    export INSTW_LOGFILE=$PWIZ_TMPDIR/installwatch/$PWIZ_PHASE_CURRENT$PWIZ_STAGE_CURRENT
# FIXME: path
    export LD_PRELOAD="$LD_PRELOAD @PW_WRAPPERDIR@/pwizwatch.so"
    pwiz_run_wrap "$@"
    export LD_PRELOAD="$LD_PRELOAD_save"
}
